/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Ankledot (https://sketchfab.com/Ankledot)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/small-scene-2efd162a656648f4b7f295b9bef74835
title: Small Scene
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle_M_Circle_0: THREE.Mesh
    Circle_M_Circle_Water_0: THREE.Mesh
    Circle_M_Circle_Net_0: THREE.Mesh
    Circle_M_Circle_Dirt_0: THREE.Mesh
    Circle_Material002_0: THREE.Mesh
    Circle_M_Collumn_0: THREE.Mesh
    Circle_M_Collumn_0_1: THREE.Mesh
  }
  materials: {
    M_Circle: THREE.MeshStandardMaterial
    M_Circle_Water: THREE.MeshStandardMaterial
    M_Circle_Net: THREE.MeshStandardMaterial
    M_Circle_Dirt: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    M_Collumn: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/dungeon-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.Circle_M_Circle_0.geometry} material={materials.M_Circle} />
            <mesh geometry={nodes.Circle_M_Circle_Water_0.geometry} material={materials.M_Circle_Water} />
            <mesh geometry={nodes.Circle_M_Circle_Net_0.geometry} material={materials.M_Circle_Net} />
            <mesh geometry={nodes.Circle_M_Circle_Dirt_0.geometry} material={materials.M_Circle_Dirt} />
            <mesh geometry={nodes.Circle_Material002_0.geometry} material={materials['Material.002']} />
            <mesh geometry={nodes.Circle_M_Collumn_0.geometry} material={materials.M_Collumn} />
            <mesh geometry={nodes.Circle_M_Collumn_0_1.geometry} material={materials.M_Collumn} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/dungeon-transformed.glb')
