/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Ken (https://sketchfab.com/kenaiden)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/crystal-fe78a6b8a8dc41e89337ab490c524ce8
title: Crystal
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cone007__0: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/crystal-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[17.01, 0, -9.49]} rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[-122.22, 34.23, -15.44]} rotation={[Math.PI / 2, 0, -2.71]} scale={47.49}>
            <mesh geometry={nodes.Cone007__0.geometry} material={materials['Scene_-_Root']} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/crystal-transformed.glb')
